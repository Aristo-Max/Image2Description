{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aristomax\\\\Projects\\\\Img2Des\\\\Img2Des\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Papa from \"papaparse\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { saveAs } from 'file-saver';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files, setFiles] = useState(() => {\n    const savedFiles = localStorage.getItem(\"files\");\n    return savedFiles ? JSON.parse(savedFiles) : [];\n  });\n  const [previews, setPreviews] = useState([]);\n  const [csvData, setCsvData] = useState(null);\n  const [isCsvLoaded, setIsCsvLoaded] = useState(false);\n  const [expandedRow, setExpandedRow] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedFiles, setDeletedFiles] = useState([]);\n  const [notification, setNotification] = useState({\n    message: \"\",\n    type: \"\"\n  });\n  useEffect(() => {\n    localStorage.setItem(\"files\", JSON.stringify(files));\n  }, [files]);\n  const showNotification = (message, type) => {\n    console.log(\"Showing notification:\", message, type);\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification({\n        message: \"\",\n        type: \"\"\n      });\n    }, 3000);\n  };\n  const handleRemoveImage = indexToRemove => {\n    console.log(\"Files:\", files);\n    setFiles(prevFiles => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles[indexToRemove].deleted = true; // Mark as deleted\n      return updatedFiles;\n    });\n    console.log(\"Deleted files:\", deletedFiles);\n    console.log(\"Files:\", files);\n    // Remove the image from the files state\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== indexToRemove));\n\n    // Remove the corresponding preview from the previews state\n    setPreviews(prevPreviews => prevPreviews.filter((_, i) => i !== indexToRemove));\n    console.log(\"Dedsfwefewfv Files:\", files);\n  };\n  const downloadCsv = () => {\n    if (!csvData || csvData.length === 0) {\n      alert(\"No data available to download.\");\n      return;\n    }\n    const csv = Papa.unparse(csvData);\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    saveAs(blob, \"data.csv\");\n  };\n  const uploadImages = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    const filesToUpload = files.filter(file => !deletedFiles.includes(file));\n    filesToUpload.forEach(file => {\n      formData.append(\"images\", file);\n    });\n    try {\n      // Log each file from FormData\n      for (let [key, value] of formData.entries()) {\n        console.log(`${key}:`, value);\n      }\n      //   try {\n      //     const response = await axios.post(\"http://localhost:8080/api/upload\", formData, {\n      //       headers: {\n      //         \"Content-Type\": \"multipart/form-data\",\n      //       },\n      //     });\n\n      //     if (response.data.success) {\n      //       showNotification(\"Images uploaded successfully!\", \"success\");\n      //       await loadCsv();\n      //       setDeletedFiles([]); \n      //     } else {\n      //       showNotification(\"Server Down!!\", \"error\");\n      //     }\n    } catch (error) {\n      console.error(\"Error uploading images:\", error.response ? error.response.data : error.message);\n      showNotification(\"Something went wrong with the server!\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const onDrop = acceptedFiles => {\n    const validFiles = acceptedFiles.filter(file => [\"image/png\", \"image/jpeg\", \"image/jpg\"].includes(file.type));\n    if (validFiles.length !== acceptedFiles.length) {\n      alert(\"Some files were rejected. Only PNG, JPG, and JPEG are allowed.\");\n    }\n    setFiles(prevFiles => [...prevFiles, ...validFiles]);\n    const newPreviews = validFiles.map(() => ({\n      isLoading: true,\n      url: null\n    }));\n    setPreviews(prevPreviews => [...prevPreviews, ...newPreviews]);\n    validFiles.forEach((file, index) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setPreviews(prevPreviews => {\n          const updatedPreviews = [...prevPreviews];\n          updatedPreviews[prevPreviews.length - validFiles.length + index] = {\n            isLoading: false,\n            url: reader.result\n          };\n          return updatedPreviews;\n        });\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      \"image/jpeg\": [\".jpg\", \".jpeg\"],\n      \"image/png\": [\".png\"]\n    }\n  });\n  const loadCsv = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/get-latest-csv\");\n      const csvText = await response.text();\n      Papa.parse(csvText, {\n        header: true,\n        complete: results => {\n          setCsvData(results.data);\n          setIsCsvLoaded(true);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error loading the CSV file:\", error);\n      alert(\"Failed to load CSV file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: \"2px solid #0D9ECA\",\n        width: \"100%\",\n        marginTop: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), notification.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"80px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        maxWidth: \"400px\",\n        width: \"90%\",\n        padding: \"10px\",\n        backgroundColor: notification.type === \"success\" ? '#0D9ECA' : \"#dc3545\",\n        color: \"white\",\n        textAlign: \"center\",\n        borderRadius: \"5px\",\n        boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\",\n        zIndex: 1000\n      },\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"75vh\",\n        fontFamily: \"'Roboto', sans-serif\",\n        backgroundColor: \"#F2FAFF\",\n        padding: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: isCsvLoaded ? \"1200px\" : \"800px\",\n          transition: \"width 0.3s ease\",\n          padding: \"30px\",\n          border: \"1px solid #ddd\",\n          borderRadius: \"10px\",\n          boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\n          backgroundColor: \"#fff\"\n        },\n        children: !isCsvLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\",\n              color: \"#333\"\n            },\n            children: \"Select Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              uploadImages();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              style: {\n                border: \"2px dashed #0D9ECA\",\n                borderRadius: \"8px\",\n                padding: \"15px\",\n                textAlign: \"center\",\n                cursor: \"pointer\",\n                backgroundColor: isDragActive ? \"#eaf6ff\" : \"#f9f9f9\",\n                marginBottom: \"15px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"#0D9ECA\"\n                },\n                children: \"Drop the files here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"#555\"\n                },\n                children: \"Select Images OR Drag & Drop Images here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                maxHeight: \"300px\",\n                overflowY: \"auto\",\n                border: \"1px solid #ddd\",\n                borderRadius: \"8px\",\n                padding: \"15px\",\n                marginTop: \"15px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  gap: \"15px\",\n                  justifyContent: \"center\"\n                },\n                children: previews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: \"relative\",\n                    width: \"80px\",\n                    height: \"80px\",\n                    borderRadius: \"5px\",\n                    border: \"1px solid #ddd\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  },\n                  children: [preview.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"30px\",\n                      height: \"30px\",\n                      border: \"4px solid #ccc\",\n                      borderTop: \"4px solid #0D9ECA\",\n                      borderRadius: \"50%\",\n                      animation: \"spin 1s linear infinite\"\n                    }\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: preview.url,\n                    alt: `Preview ${index + 1}`,\n                    style: {\n                      width: \"100%\",\n                      height: \"100%\",\n                      objectFit: \"cover\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => handleRemoveImage(index),\n                    style: {\n                      position: \"absolute\",\n                      top: \"-10px\",\n                      right: \"-10px\",\n                      background: \"#ffffff\",\n                      border: \"none\",\n                      borderRadius: \"50%\",\n                      cursor: \"pointer\",\n                      color: \"#000000\",\n                      fontSize: \"20px\",\n                      width: \"25px\",\n                      height: \"25px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\"\n                    },\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                marginTop: \"20px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: isLoading,\n                style: {\n                  backgroundColor: \"#0D9ECA\",\n                  color: \"#fff\",\n                  border: \"none\",\n                  padding: \"10px 20px\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                  fontSize: \"16px\"\n                },\n                children: isLoading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n                  size: 15,\n                  color: \"#ffffff\",\n                  loading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 34\n                }, this) : \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: \"#333\"\n              },\n              children: \"Generated Product Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadCsv,\n              style: {\n                backgroundColor: \"#0D9ECA\",\n                color: \"#fff\",\n                border: \"none\",\n                padding: \"10px 20px\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\"\n              },\n              children: \"Download CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxHeight: \"400px\",\n              overflowY: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                width: \"100%\",\n                borderCollapse: \"collapse\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: \"#0D9ECA\",\n                    color: \"#fff\"\n                  },\n                  children: [csvData[0] && Object.keys(csvData[0]).slice(0, 3).map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: \"10px\",\n                      border: \"1px solid #ddd\"\n                    },\n                    children: header\n                  }, header, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: \"10px\",\n                      border: \"1px solid #ddd\"\n                    },\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: csvData.filter(row => Object.values(row).some(value => value)).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: \"1px solid #ddd\",\n                      padding: \"10px\",\n                      textAlign: \"center\"\n                    },\n                    children: row.Image && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `http://localhost:8080/upload/${row.Image}`,\n                      alt: \"Product\",\n                      style: {\n                        width: \"60px\",\n                        height: \"60px\",\n                        objectFit: \"cover\",\n                        borderRadius: \"5px\"\n                      },\n                      onError: e => e.target.style.display = \"none\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 27\n                  }, this), Object.values(row).slice(1, 3).map((value, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: \"1px solid #ddd\",\n                      padding: \"10px\",\n                      textAlign: \"left\"\n                    },\n                    children: value\n                  }, cellIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 31\n                  }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: \"1px solid #ddd\",\n                      padding: \"10px\",\n                      textAlign: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/more-info.svg\",\n                      alt: \"MoreInfo Icon\",\n                      onClick: () => setExpandedRow(row),\n                      style: {\n                        width: '24px',\n                        height: '24px',\n                        cursor: 'pointer'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), expandedRow && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"fixed\",\n              top: \"50%\",\n              left: \"50%\",\n              width: \"80%\",\n              maxHeight: \"80%\",\n              overflowY: \"auto\",\n              backgroundColor: \"#fff\",\n              border: \"1px solid #ddd\",\n              borderRadius: \"10px\",\n              boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\n              padding: \"20px\",\n              zIndex: 1000,\n              marginTop: \"-300px\",\n              marginLeft: \"-40%\",\n              WebkitFontSmoothing: \"antialiased\",\n              MozOsxFontSmoothing: \"grayscale\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  textAlign: \"center\",\n                  marginBottom: \"20px\",\n                  color: \"#333\"\n                },\n                children: \"Product Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setExpandedRow(null),\n                style: {\n                  background: \"none\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  fontSize: \"36px\",\n                  color: \"#333\"\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                marginBottom: \"20px\"\n              },\n              children: expandedRow && expandedRow.Image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8080/upload/${expandedRow.Image}`,\n                alt: \"Product Image\",\n                style: {\n                  maxWidth: \"300px\",\n                  maxHeight: \"300px\",\n                  objectFit: \"contain\",\n                  borderRadius: \"5px\",\n                  border: \"1px solid #ddd\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                width: \"100%\",\n                borderCollapse: \"collapse\",\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: Object.entries(expandedRow).slice(1).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    borderBottom: \"1px solid #ddd\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      fontWeight: \"bold\",\n                      padding: \"10px\",\n                      textAlign: \"left\",\n                      backgroundColor: \"#f9f9f9\"\n                    },\n                    children: key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: \"10px\",\n                      textAlign: \"left\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      value: value,\n                      onChange: e => {\n                        const updatedRow = {\n                          ...expandedRow\n                        };\n                        updatedRow[key] = e.target.value;\n                        setExpandedRow(updatedRow);\n                      },\n                      style: {\n                        width: \"100%\",\n                        minHeight: \"100px\",\n                        padding: \"10px\",\n                        border: \"1px solid #ddd\",\n                        borderRadius: \"5px\",\n                        resize: \"vertical\",\n                        fontSize: \"14px\",\n                        lineHeight: \"1.5\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                marginTop: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setExpandedRow(null),\n                style: {\n                  backgroundColor: \"#DBF8FF\",\n                  // Adjusted opacity here\n                  color: \"#0D9ECA\",\n                  border: \"none\",\n                  padding: \"10px 20px\",\n                  marginRight: \"10px\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                  transition: \"background-color 0.3s, color 0.3s\"\n                },\n                children: \"CLOSE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: async () => {\n                  try {\n                    const response = await fetch(\"http://localhost:8080/api/save-csv\", {\n                      method: \"POST\",\n                      headers: {\n                        \"Content-Type\": \"application/json\"\n                      },\n                      body: JSON.stringify(expandedRow)\n                    });\n                    if (response.ok) {\n                      showNotification(\"Information updated successfully!\", \"success\");\n                      const updatedCsvData = csvData.map(row => row.Image === expandedRow.Image ? expandedRow : row);\n                      setCsvData(updatedCsvData);\n                      setExpandedRow(null);\n                      loadCsv();\n                    } else {\n                      throw new Error(\"Failed to update Information\");\n                    }\n                  } catch (error) {\n                    console.error(\"Error saving row:\", error);\n                    showNotification(\"Failed to update Information. Please try again.\", \"error\");\n                  }\n                },\n                style: {\n                  backgroundColor: \"#0D9ECA\",\n                  color: \"#fff\",\n                  border: \"1px solid #0D9ECA\",\n                  padding: \"10px 20px\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                  marginRight: \"10px\",\n                  transition: \"background-color 0.3s, color 0.3s\"\n                },\n                children: \"UPDATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: \"2px solid #0D9ECA\",\n        // Color and thickness of the line\n        width: \"100%\",\n        // Full width of the container\n        marginTop: \"0\" // Remove default margin\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0LoYJy4doBz/fzGnxT2A29EoFmA=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDropzone","Papa","Header","Footer","saveAs","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","files","setFiles","savedFiles","localStorage","getItem","JSON","parse","previews","setPreviews","csvData","setCsvData","isCsvLoaded","setIsCsvLoaded","expandedRow","setExpandedRow","isLoading","setIsLoading","deletedFiles","setDeletedFiles","notification","setNotification","message","type","setItem","stringify","showNotification","console","log","setTimeout","handleRemoveImage","indexToRemove","prevFiles","updatedFiles","deleted","filter","_","i","prevPreviews","downloadCsv","length","alert","csv","unparse","blob","Blob","uploadImages","formData","FormData","filesToUpload","file","includes","forEach","append","key","value","entries","error","response","data","onDrop","acceptedFiles","validFiles","newPreviews","map","url","index","reader","FileReader","onload","updatedPreviews","result","readAsDataURL","getRootProps","getInputProps","isDragActive","accept","loadCsv","fetch","csvText","text","header","complete","results","children","fileName","_jsxFileName","lineNumber","columnNumber","style","borderTop","width","marginTop","position","top","left","transform","maxWidth","padding","backgroundColor","color","textAlign","borderRadius","boxShadow","zIndex","display","alignItems","justifyContent","minHeight","fontFamily","transition","border","onSubmit","e","preventDefault","cursor","marginBottom","maxHeight","overflowY","flexWrap","gap","preview","height","animation","src","alt","objectFit","onClick","right","background","fontSize","disabled","size","loading","borderCollapse","Object","keys","slice","row","values","some","Image","onError","target","cellIndex","marginLeft","WebkitFontSmoothing","MozOsxFontSmoothing","borderBottom","fontWeight","onChange","updatedRow","resize","lineHeight","marginRight","method","headers","body","ok","updatedCsvData","Error","_c","$RefreshReg$"],"sources":["E:/Aristomax/Projects/Img2Des/Img2Des/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Papa from \"papaparse\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { saveAs } from 'file-saver';\nimport { ClipLoader } from 'react-spinners';\n\nfunction App() {\n  const [files, setFiles] = useState(() => {\n    const savedFiles = localStorage.getItem(\"files\");\n    return savedFiles ? JSON.parse(savedFiles) : [];\n  });\n  const [previews, setPreviews] = useState([]);\n  const [csvData, setCsvData] = useState(null);\n  const [isCsvLoaded, setIsCsvLoaded] = useState(false);\n  const [expandedRow, setExpandedRow] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedFiles, setDeletedFiles] = useState([]);\n\n  const [notification, setNotification] = useState({ message: \"\", type: \"\" });\n\n  useEffect(() => {\n    localStorage.setItem(\"files\", JSON.stringify(files));\n  }, [files]);\n\n\n  const showNotification = (message, type) => {\n    console.log(\"Showing notification:\", message, type);\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification({ message: \"\", type: \"\" });\n    }, 3000);\n  };\n\n  const handleRemoveImage = (indexToRemove) => {\n\n    console.log(\"Files:\", files);\n    setFiles((prevFiles) => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles[indexToRemove].deleted = true; // Mark as deleted\n      return updatedFiles;\n    });\n    console.log(\"Deleted files:\", deletedFiles);\n    console.log(\"Files:\", files);\n    // Remove the image from the files state\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== indexToRemove));\n\n    // Remove the corresponding preview from the previews state\n    setPreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== indexToRemove));\n\n    console.log(\"Dedsfwefewfv Files:\", files);\n  };\n\n  const downloadCsv = () => {\n    if (!csvData || csvData.length === 0) {\n      alert(\"No data available to download.\");\n      return;\n    }\n\n    const csv = Papa.unparse(csvData);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(blob, \"data.csv\");\n  };\n\n  const uploadImages = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    const filesToUpload = files.filter((file) => !deletedFiles.includes(file));\n\n    filesToUpload.forEach((file) => {\n      formData.append(\"images\", file);\n    });\n\n    try {\n      // Log each file from FormData\n      for (let [key, value] of formData.entries()) {\n        console.log(`${key}:`, value);\n      }\n      //   try {\n      //     const response = await axios.post(\"http://localhost:8080/api/upload\", formData, {\n      //       headers: {\n      //         \"Content-Type\": \"multipart/form-data\",\n      //       },\n      //     });\n\n      //     if (response.data.success) {\n      //       showNotification(\"Images uploaded successfully!\", \"success\");\n      //       await loadCsv();\n      //       setDeletedFiles([]); \n      //     } else {\n      //       showNotification(\"Server Down!!\", \"error\");\n      //     }\n    } catch (error) {\n      console.error(\"Error uploading images:\", error.response ? error.response.data : error.message);\n      showNotification(\"Something went wrong with the server!\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onDrop = (acceptedFiles) => {\n    const validFiles = acceptedFiles.filter((file) =>\n      [\"image/png\", \"image/jpeg\", \"image/jpg\"].includes(file.type)\n    );\n\n    if (validFiles.length !== acceptedFiles.length) {\n      alert(\"Some files were rejected. Only PNG, JPG, and JPEG are allowed.\");\n    }\n\n    setFiles((prevFiles) => [...prevFiles, ...validFiles]);\n\n    const newPreviews = validFiles.map(() => ({\n      isLoading: true,\n      url: null,\n    }));\n    setPreviews((prevPreviews) => [...prevPreviews, ...newPreviews]);\n\n    validFiles.forEach((file, index) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setPreviews((prevPreviews) => {\n          const updatedPreviews = [...prevPreviews];\n          updatedPreviews[prevPreviews.length - validFiles.length + index] = {\n            isLoading: false,\n            url: reader.result,\n          };\n          return updatedPreviews;\n        });\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      \"image/jpeg\": [\".jpg\", \".jpeg\"],\n      \"image/png\": [\".png\"],\n    },\n  });\n\n  const loadCsv = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/get-latest-csv\");\n      const csvText = await response.text();\n      Papa.parse(csvText, {\n        header: true,\n        complete: (results) => {\n          setCsvData(results.data);\n          setIsCsvLoaded(true);\n        },\n      });\n    } catch (error) {\n      console.error(\"Error loading the CSV file:\", error);\n      alert(\"Failed to load CSV file.\");\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div style={{\n        borderTop: \"2px solid #0D9ECA\",\n        width: \"100%\",\n        marginTop: \"0\",\n      }} />\n      {notification.message && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"80px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            maxWidth: \"400px\",\n            width: \"90%\",\n            padding: \"10px\",\n            backgroundColor: notification.type === \"success\" ? '#0D9ECA' : \"#dc3545\",\n            color: \"white\",\n            textAlign: \"center\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\",\n            zIndex: 1000,\n          }}\n        >\n          {notification.message}\n        </div>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"75vh\",\n          fontFamily: \"'Roboto', sans-serif\",\n          backgroundColor: \"#F2FAFF\",\n          padding: \"20px\",\n        }}\n      >\n        <div\n          style={{\n            width: isCsvLoaded ? \"1200px\" : \"800px\",\n            transition: \"width 0.3s ease\",\n            padding: \"30px\",\n            border: \"1px solid #ddd\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\n            backgroundColor: \"#fff\",\n          }}\n        >\n          {!isCsvLoaded ? (\n            <>\n              <h1 style={{ textAlign: \"center\", color: \"#333\" }}>Select Images</h1>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  uploadImages();\n                }}\n              >\n                <div\n                  {...getRootProps()}\n                  style={{\n                    border: \"2px dashed #0D9ECA\",\n                    borderRadius: \"8px\",\n                    padding: \"15px\",\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                    backgroundColor: isDragActive ? \"#eaf6ff\" : \"#f9f9f9\",\n                    marginBottom: \"15px\",\n                  }}\n                >\n                  <input {...getInputProps()} />\n                  {isDragActive ? (\n                    <p style={{ color: \"#0D9ECA\" }}>Drop the files here...</p>\n                  ) : (\n                    <p style={{ color: \"#555\" }}>\n                      Select Images OR Drag & Drop Images here...\n                    </p>\n                  )}\n                </div>\n                {previews.length > 0 && (\n                  <div\n                    style={{\n                      maxHeight: \"300px\",\n                      overflowY: \"auto\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"8px\",\n                      padding: \"15px\",\n                      marginTop: \"15px\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        gap: \"15px\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {previews.map((preview, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            position: \"relative\",\n                            width: \"80px\",\n                            height: \"80px\",\n                            borderRadius: \"5px\",\n                            border: \"1px solid #ddd\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {preview.isLoading ? (\n                            <div\n                              key={index}\n                              style={{\n                                width: \"30px\",\n                                height: \"30px\",\n                                border: \"4px solid #ccc\",\n                                borderTop: \"4px solid #0D9ECA\",\n                                borderRadius: \"50%\",\n                                animation: \"spin 1s linear infinite\",\n                              }}\n                            ></div>\n                          ) : (\n                            <img\n                              src={preview.url}\n                              alt={`Preview ${index + 1}`}\n                              style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                objectFit: \"cover\",\n                              }}\n                            />\n                          )}\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveImage(index)}\n                            style={{\n                              position: \"absolute\",\n                              top: \"-10px\",\n                              right: \"-10px\",\n                              background: \"#ffffff\",\n                              border: \"none\",\n                              borderRadius: \"50%\",\n                              cursor: \"pointer\",\n                              color: \"#000000\",\n                              fontSize: \"20px\",\n                              width: \"25px\",\n                              height: \"25px\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\n                            }}\n                          >\n                            &times;\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                  <button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    style={{\n                      backgroundColor: \"#0D9ECA\",\n                      color: \"#fff\",\n                      border: \"none\",\n                      padding: \"10px 20px\",\n                      borderRadius: \"5px\",\n                      cursor: \"pointer\",\n                      fontSize: \"16px\",\n                    }}\n                  >\n                    {isLoading ? <ClipLoader size={15} color={\"#ffffff\"} loading={isLoading} /> : \"Upload Images\"}\n                  </button>\n                </div>\n              </form>\n            </>\n          ) : (\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: \"10px\",\n                }}\n              >\n                <h2 style={{ color: \"#333\" }}>Generated Product Information</h2>\n                <button\n                  onClick={downloadCsv}\n                  style={{\n                    backgroundColor: \"#0D9ECA\",\n                    color: \"#fff\",\n                    border: \"none\",\n                    padding: \"10px 20px\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  Download CSV\n                </button>\n              </div>\n              <div\n                style={{\n                  maxHeight: \"400px\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <table\n                  style={{\n                    width: \"100%\",\n                    borderCollapse: \"collapse\",\n                  }}\n                >\n                  <thead>\n                    <tr\n                      style={{\n                        backgroundColor: \"#0D9ECA\",\n                        color: \"#fff\",\n                      }}\n                    >\n                      {csvData[0] &&\n                        Object.keys(csvData[0])\n                          .slice(0, 3)\n                          .map((header) => (\n                            <th\n                              key={header}\n                              style={{\n                                padding: \"10px\",\n                                border: \"1px solid #ddd\",\n                              }}\n                            >\n                              {header}\n                            </th>\n                          ))}\n                      <th\n                        style={{\n                          padding: \"10px\",\n                          border: \"1px solid #ddd\",\n                        }}\n                      >\n                        Details\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {csvData\n                      .filter((row) => Object.values(row).some((value) => value))\n                      .map((row, index) => (\n                        <tr key={index}>\n                          <td\n                            style={{\n                              border: \"1px solid #ddd\",\n                              padding: \"10px\",\n                              textAlign: \"center\",\n                            }}\n                          >\n                            {row.Image && (\n                              <img\n                                src={`http://localhost:8080/upload/${row.Image}`}\n                                alt=\"Product\"\n                                style={{\n                                  width: \"60px\",\n                                  height: \"60px\",\n                                  objectFit: \"cover\",\n                                  borderRadius: \"5px\",\n                                }}\n                                onError={(e) => (e.target.style.display = \"none\")}\n                              />\n                            )}\n                          </td>\n                          {Object.values(row)\n                            .slice(1, 3)\n                            .map((value, cellIndex) => (\n                              <td\n                                key={cellIndex}\n                                style={{\n                                  border: \"1px solid #ddd\",\n                                  padding: \"10px\",\n                                  textAlign: \"left\",\n                                }}\n                              >\n                                {value}\n                              </td>\n                            ))}\n                          <td\n                            style={{\n                              border: \"1px solid #ddd\",\n                              padding: \"10px\",\n                              textAlign: \"center\",\n                            }}\n                          >\n                            <img\n                              src='/more-info.svg'\n                              alt=\"MoreInfo Icon\"\n                              onClick={() => setExpandedRow(row)}\n                              style={{\n                                width: '24px',\n                                height: '24px',\n                                cursor: 'pointer',\n                              }}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n              {expandedRow && (\n                <div\n                  style={{\n                    position: \"fixed\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    width: \"80%\",\n                    maxHeight: \"80%\",\n                    overflowY: \"auto\",\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid #ddd\",\n                    borderRadius: \"10px\",\n                    boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\n                    padding: \"20px\",\n                    zIndex: 1000,\n                    marginTop: \"-300px\",\n                    marginLeft: \"-40%\",\n                    WebkitFontSmoothing: \"antialiased\",\n                    MozOsxFontSmoothing: \"grayscale\",\n                  }}\n                >\n                  <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <h2 style={{ textAlign: \"center\", marginBottom: \"20px\", color: \"#333\" }}>\n                      Product Details\n                    </h2>\n                    <button\n                      onClick={() => setExpandedRow(null)}\n                      style={{\n                        background: \"none\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        fontSize: \"36px\",\n                        color: \"#333\",\n                      }}\n                    >&times;</button>\n                  </div>\n                  <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                    {expandedRow && expandedRow.Image && (\n                      <img\n                        src={`http://localhost:8080/upload/${expandedRow.Image}`}\n                        alt=\"Product Image\"\n                        style={{\n                          maxWidth: \"300px\",\n                          maxHeight: \"300px\",\n                          objectFit: \"contain\",\n                          borderRadius: \"5px\",\n                          border: \"1px solid #ddd\",\n                        }}\n                      />\n                    )}\n                  </div>\n                  <table\n                    style={{\n                      width: \"100%\",\n                      borderCollapse: \"collapse\",\n                      marginTop: \"10px\",\n                    }}\n                  >\n                    <tbody>\n                      {Object.entries(expandedRow)\n                        .slice(1)\n                        .map(([key, value], index) => (\n                          <tr\n                            key={index}\n                            style={{\n                              borderBottom: \"1px solid #ddd\",\n                            }}\n                          >\n                            <td\n                              style={{\n                                fontWeight: \"bold\",\n                                padding: \"10px\",\n                                textAlign: \"left\",\n                                backgroundColor: \"#f9f9f9\",\n                              }}\n                            >\n                              {key}\n                            </td>\n                            <td\n                              style={{\n                                padding: \"10px\",\n                                textAlign: \"left\",\n                              }}\n                            >\n                              <textarea\n                                value={value}\n                                onChange={(e) => {\n                                  const updatedRow = { ...expandedRow };\n                                  updatedRow[key] = e.target.value;\n                                  setExpandedRow(updatedRow);\n                                }}\n                                style={{\n                                  width: \"100%\",\n                                  minHeight: \"100px\",\n                                  padding: \"10px\",\n                                  border: \"1px solid #ddd\",\n                                  borderRadius: \"5px\",\n                                  resize: \"vertical\",\n                                  fontSize: \"14px\",\n                                  lineHeight: \"1.5\",\n                                }}\n                              />\n                            </td>\n                          </tr>\n                        ))}\n                    </tbody>\n                  </table>\n                  <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n\n                    <button\n                      onClick={() => setExpandedRow(null)}\n                      style={{\n                        backgroundColor: \"#DBF8FF\", // Adjusted opacity here\n                        color: \"#0D9ECA\",\n                        border: \"none\",\n                        padding: \"10px 20px\",\n                        marginRight: \"10px\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\",\n                        transition: \"background-color 0.3s, color 0.3s\",\n                      }}\n                    >\n                      CLOSE\n                    </button>\n\n                    <button\n                      onClick={async () => {\n                        try {\n                          const response = await fetch(\"http://localhost:8080/api/save-csv\", {\n                            method: \"POST\",\n                            headers: {\n                              \"Content-Type\": \"application/json\",\n                            },\n                            body: JSON.stringify(expandedRow),\n                          });\n                          if (response.ok) {\n                            showNotification(\"Information updated successfully!\", \"success\");\n                            const updatedCsvData = csvData.map((row) =>\n                              row.Image === expandedRow.Image ? expandedRow : row\n                            );\n                            setCsvData(updatedCsvData);\n                            setExpandedRow(null);\n                            loadCsv();\n                          } else {\n                            throw new Error(\"Failed to update Information\");\n                          }\n                        } catch (error) {\n                          console.error(\"Error saving row:\", error);\n                          showNotification(\"Failed to update Information. Please try again.\", \"error\");\n                        }\n                      }}\n                      style={{\n                        backgroundColor: \"#0D9ECA\",\n                        color: \"#fff\",\n                        border: \"1px solid #0D9ECA\",\n                        padding: \"10px 20px\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\",\n                        marginRight: \"10px\",\n                        transition: \"background-color 0.3s, color 0.3s\",\n                      }}\n                    >\n                      UPDATE\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <div style={{\n        borderTop: \"2px solid #0D9ECA\", // Color and thickness of the line\n        width: \"100%\", // Full width of the container\n        marginTop: \"0\", // Remove default margin\n      }} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}